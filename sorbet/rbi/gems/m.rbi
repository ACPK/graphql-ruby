# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strong
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/m/all/m.rbi
#
# m-1.5.1
module M
  def self.run(argv); end
end
class M::Frameworks
  def framework_runner; end
  def minitest4?; end
  def minitest5?; end
  def self.framework_runner; end
  def self.minitest4?; end
  def self.minitest5?; end
  def self.test_unit?; end
  def test_unit?; end
end
class M::Testable
  def file; end
  def file=(arg0); end
  def initialize(file = nil, lines = nil, recursive = nil); end
  def lines; end
  def lines=(lines); end
  def recursive; end
  def recursive=(arg0); end
end
class M::Parser
  def argv; end
  def initialize(argv); end
  def parse; end
  def parse_options!(argv); end
  def testable; end
  def wildcard(type); end
end
module M::Runners
end
class M::Runners::Base
  def run(_test_arguments); end
  def suites; end
  def test_methods(suite_class); end
end
class M::Runners::Minitest5 < M::Runners::Base
  def run(test_arguments); end
  def suites; end
  def test_methods(suite_class); end
end
class M::Runners::Minitest4 < M::Runners::Base
  def run(test_arguments); end
  def suites; end
end
class M::Runners::TestUnit < M::Runners::Base
  def run(test_arguments); end
  def suites; end
  def test_methods(suite_class); end
end
class M::Runners::UnsupportedFramework < M::Runners::Base
  def not_supported; end
  def run(_test_arguments); end
  def suites; end
end
class M::Executor
  def execute; end
  def initialize(testable); end
  def runner; end
  def suites; end
  def testable; end
  def tests; end
end
class M::Runner
  def initialize(argv); end
  def run; end
end
